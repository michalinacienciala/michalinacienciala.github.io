{"version":3,"file":"static/js/145.615daea3.chunk.js","mappings":"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","sources":["../../src/classes.ts","../../src/error-constants.ts","../../src/errors.ts","../../src/index.ts","../../src/utils.ts","../node_modules/@toruslabs/base-controllers/node_modules/ethereumjs-util/src/account.ts","../node_modules/@toruslabs/base-controllers/node_modules/ethereumjs-util/src/address.ts","../node_modules/@toruslabs/base-controllers/node_modules/ethereumjs-util/src/bytes.ts","../node_modules/@toruslabs/base-controllers/node_modules/ethereumjs-util/src/constants.ts","../node_modules/@toruslabs/base-controllers/node_modules/ethereumjs-util/src/externals.ts","../node_modules/@toruslabs/base-controllers/node_modules/ethereumjs-util/src/hash.ts","../node_modules/@toruslabs/base-controllers/node_modules/ethereumjs-util/src/helpers.ts","../node_modules/@toruslabs/base-controllers/node_modules/ethereumjs-util/src/index.ts","../node_modules/@toruslabs/base-controllers/node_modules/ethereumjs-util/src/internal.ts","../node_modules/@toruslabs/base-controllers/node_modules/ethereumjs-util/src/object.ts","../node_modules/@toruslabs/base-controllers/node_modules/ethereumjs-util/src/signature.ts","../node_modules/@toruslabs/base-controllers/node_modules/ethereumjs-util/src/types.ts","../node_modules/@toruslabs/openlogin-utils/src/url.ts","../node_modules/@toruslabs/openlogin-jrpc/src/basePostMessageStream.ts","../node_modules/@toruslabs/openlogin-jrpc/src/safeEventEmitter.ts","../node_modules/@toruslabs/openlogin-jrpc/src/serializableError.ts","../node_modules/@toruslabs/openlogin-jrpc/src/jrpc.ts","../node_modules/@toruslabs/openlogin-utils/src/randomId.ts","../node_modules/@toruslabs/openlogin-jrpc/src/jrpcEngine.ts","../node_modules/@toruslabs/openlogin-jrpc/src/substream.ts","../node_modules/@toruslabs/openlogin-jrpc/src/mux.ts","../node_modules/@toruslabs/base-controllers/node_modules/bignumber.js/bignumber.mjs","../node_modules/@toruslabs/base-controllers/src/Network/INetworkController.ts","../node_modules/@toruslabs/base-controllers/src/enums.ts","../node_modules/@toruslabs/base-controllers/src/utils/utils.ts","../node_modules/@toruslabs/base-controllers/src/Transaction/ITransactionController.ts","../node_modules/@toruslabs/solana-embed/src/messages.ts","../node_modules/@toruslabs/solana-embed/src/interfaces.ts","../node_modules/@toruslabs/solana-embed/src/config.ts","../node_modules/@toruslabs/solana-embed/src/loglevel.ts","../node_modules/@toruslabs/solana-embed/src/utils.ts","../node_modules/@toruslabs/solana-embed/src/baseProvider.ts","../node_modules/@toruslabs/base-controllers/src/Network/createLoggerMiddleware.ts","../node_modules/@toruslabs/solana-embed/src/embedUtils.ts","../node_modules/@toruslabs/solana-embed/src/PopupHandler.ts","../node_modules/@toruslabs/solana-embed/src/communicationProvider.ts","../node_modules/@toruslabs/solana-embed/src/inPageProvider.ts","../node_modules/@toruslabs/solana-embed/src/siteMetadata.ts","../node_modules/@toruslabs/solana-embed/src/embed.ts"],"sourcesContent":[null,null,null,null,null,"import assert from 'assert'\nimport { BN, rlp } from './externals'\nimport {\n  privateKeyVerify,\n  publicKeyCreate,\n  publicKeyVerify,\n  publicKeyConvert,\n} from 'ethereum-cryptography/secp256k1'\nimport { stripHexPrefix } from './internal'\nimport { KECCAK256_RLP, KECCAK256_NULL } from './constants'\nimport { zeros, bufferToHex, toBuffer } from './bytes'\nimport { keccak, keccak256, keccakFromString, rlphash } from './hash'\nimport { assertIsString, assertIsHexString, assertIsBuffer } from './helpers'\nimport { BNLike, BufferLike, bnToUnpaddedBuffer, toType, TypeOutput } from './types'\n\nexport interface AccountData {\n  nonce?: BNLike\n  balance?: BNLike\n  stateRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport class Account {\n  nonce: BN\n  balance: BN\n  stateRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, stateRoot, codeHash } = accountData\n\n    return new Account(\n      nonce ? new BN(toBuffer(nonce)) : undefined,\n      balance ? new BN(toBuffer(balance)) : undefined,\n      stateRoot ? toBuffer(stateRoot) : undefined,\n      codeHash ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, stateRoot, codeHash] = values\n\n    return new Account(new BN(nonce), new BN(balance), stateRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = new BN(0),\n    balance = new BN(0),\n    stateRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.stateRoot = stateRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce.lt(new BN(0))) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance.lt(new BN(0))) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.balance),\n      this.stateRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress: string, eip1191ChainId?: BNLike): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = toType(eip1191ChainId, TypeOutput.BN)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccakFromString(prefix + address).toString('hex')\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BNLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n  const nonceBN = new BN(nonce)\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return rlphash([from, null]).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  assert(from.length === 20)\n  assert(salt.length === 32)\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return address.slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return privateKeyVerify(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]))\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  return publicKeyVerify(publicKey)\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1))\n  }\n  assert(pubKey.length === 64)\n  // Only take the lower 160bits of the hash\n  return keccak(pubKey).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(publicKeyCreate(privateKey, false)).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n","import assert from 'assert'\nimport { BN } from './externals'\nimport { toBuffer, zeros } from './bytes'\nimport {\n  isValidAddress,\n  pubToAddress,\n  privateToAddress,\n  generateAddress,\n  generateAddress2,\n} from './account'\n\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    assert(buf.length === 20, 'Invalid address length')\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    assert(isValidAddress(str), 'Invalid address')\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer')\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer')\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: BN): Address {\n    assert(BN.isBN(nonce))\n    return new Address(generateAddress(from.buf, nonce.toArrayLike(Buffer)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    assert(Buffer.isBuffer(salt))\n    assert(Buffer.isBuffer(initCode))\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const addressBN = new BN(this.buf)\n    const rangeMin = new BN(0)\n    const rangeMax = new BN('ffff', 'hex')\n\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax)\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","import { BN } from './externals'\nimport { stripHexPrefix, padToEven, isHexString, isHexPrefixed } from './internal'\nimport {\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n  NestedBufferArray,\n  NestedUint8Array,\n} from './types'\nimport { assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return stripZeros(a) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | BN\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`)\n    }\n    return v.toArrayLike(Buffer)\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  return new BN(toBuffer(buf)).toNumber()\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): BN {\n  return new BN(num).fromTwos(256)\n}\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: BN): Buffer {\n  return Buffer.from(num.toTwos(256).toArray())\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n","import { Buffer } from 'buffer'\nimport { BN } from './externals'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = new BN('ffffffffffffffff', 16)\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = new BN(\n  'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  16\n)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = new BN(\n  '10000000000000000000000000000000000000000000000000000000000000000',\n  16\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n","/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nimport BN from 'bn.js'\nimport * as rlp from 'rlp'\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n */\nexport { BN }\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n */\nexport { rlp }\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { rlp } from './externals'\nimport { toBuffer, setLengthLeft } from './bytes'\nimport { assertIsString, assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function (a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n    case 224: {\n      return keccak224(a)\n    }\n    case 256: {\n      return k256(a)\n    }\n    case 384: {\n      return keccak384(a)\n    }\n    case 512: {\n      return keccak512(a)\n    }\n    default: {\n      throw new Error(`Invald algorithm: keccak${bits}`)\n    }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function (a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function (a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function (a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function (a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function (a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256').update(a).digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function (a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function (a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function (a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160').update(a).digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function (a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function (a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function (a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function (a: rlp.Input): Buffer {\n  return keccak(rlp.encode(a))\n}\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Hash functions\n */\nexport * from './hash'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Function for definining properties on an object\n */\nexport * from './object'\n\n/**\n * External exports (BN, rlp)\n */\nexport * from './externals'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport {\n  isHexPrefixed,\n  stripHexPrefix,\n  padToEven,\n  getBinarySize,\n  arrayContainsArray,\n  toAscii,\n  fromUtf8,\n  fromAscii,\n  getKeys,\n  isHexString,\n} from './internal'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","import assert from 'assert'\nimport { stripHexPrefix } from './internal'\nimport { rlp } from './externals'\nimport { toBuffer, baToJSON, unpadBuffer } from './bytes'\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexport const defineProperties = function (self: any, fields: any, data?: any) {\n  self.raw = []\n  self._fields = []\n\n  // attach the `toJSON`\n  self.toJSON = function (label: boolean = false) {\n    if (label) {\n      type Dict = { [key: string]: string }\n      const obj: Dict = {}\n      self._fields.forEach((field: string) => {\n        obj[field] = `0x${self[field].toString('hex')}`\n      })\n      return obj\n    }\n    return baToJSON(self.raw)\n  }\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw)\n  }\n\n  fields.forEach((field: any, i: number) => {\n    self._fields.push(field.name)\n    function getter() {\n      return self.raw[i]\n    }\n    function setter(v: any) {\n      v = toBuffer(v)\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0)\n      }\n\n      if (field.allowLess && field.length) {\n        v = unpadBuffer(v)\n        assert(\n          field.length >= v.length,\n          `The field ${field.name} must not have more ${field.length} bytes`\n        )\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(\n          field.length === v.length,\n          `The field ${field.name} must have byte length of ${field.length}`\n        )\n      }\n\n      self.raw[i] = v\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter,\n    })\n\n    if (field.default) {\n      self[field.name] = field.default\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter,\n      })\n    }\n  })\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(stripHexPrefix(data), 'hex')\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data)\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data')\n      }\n\n      // make sure all the items are buffers\n      data.forEach((d, i) => {\n        self[self._fields[i]] = toBuffer(d)\n      })\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data)\n      fields.forEach((field: any) => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name]\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias]\n      })\n    } else {\n      throw new Error('invalid data')\n    }\n  }\n}\n","import { ecdsaSign, ecdsaRecover, publicKeyConvert } from 'ethereum-cryptography/secp256k1'\nimport { BN } from './externals'\nimport { toBuffer, setLengthLeft, bufferToHex, bufferToInt } from './bytes'\nimport { keccak } from './hash'\nimport { assertIsBuffer } from './helpers'\nimport { BNLike, toType, TypeOutput } from './types'\n\nexport interface ECDSASignature {\n  v: number\n  r: Buffer\n  s: Buffer\n}\n\nexport interface ECDSASignatureBuffer {\n  v: Buffer\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: number): ECDSASignature\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: BNLike): ECDSASignatureBuffer\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: any): any {\n  const { signature, recid: recovery } = ecdsaSign(msgHash, privateKey)\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n      )\n    }\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n    return { r, s, v }\n  }\n\n  const chainIdBN = toType(chainId as BNLike, TypeOutput.BN)\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer)\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: BNLike, chainId?: BNLike): BN {\n  const vBN = toType(v, TypeOutput.BN)\n\n  if (vBN.eqn(0) || vBN.eqn(1)) return toType(v, TypeOutput.BN)\n\n  if (!chainId) {\n    return vBN.subn(27)\n  }\n  const chainIdBN = toType(chainId, TypeOutput.BN)\n  return vBN.sub(chainIdBN.muln(2).addn(35))\n}\n\nfunction isValidSigRecovery(recovery: number | BN): boolean {\n  const rec = new BN(recovery)\n  return rec.eqn(0) || rec.eqn(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  chainId?: BNLike\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n  const senderPubKey = ecdsaRecover(signature, recovery.toNumber(), msgHash)\n  return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const vn = toType(v, TypeOutput.Number)\n  let ss = s\n  if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: number\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: BNLike\n): boolean {\n  const SECP256K1_N_DIV_2 = new BN(\n    '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n    16\n  )\n  const SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBN = new BN(r)\n  const sBN = new BN(s)\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return keccak(Buffer.concat([prefix, message]))\n}\n","import { BN } from './externals'\nimport { isHexString } from './internal'\nimport { Address } from './address'\nimport { unpadBuffer, toBuffer, ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents a BNLike input that can be converted to a BN.\n */\nexport type BNLike = BN | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents a BufferLike input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | BN\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an Address-like value.\n * To convert to address, use `new Address(toBuffer(value))`\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n  return `0x${value.toString(16)}`\n}\n\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bnToUnpaddedBuffer(value: BN): Buffer {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return unpadBuffer(value.toArrayLike(Buffer))\n}\n\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nexport function bnToRlp(value: BN): Buffer {\n  return bnToUnpaddedBuffer(value)\n}\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BN,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BN]: BN\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  if (outputType === TypeOutput.Buffer) {\n    return output as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.BN) {\n    return new BN(output) as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new BN(output)\n    const max = new BN(Number.MAX_SAFE_INTEGER.toString())\n    if (bn.gt(max)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n      )\n    }\n    return bn.toNumber() as TypeOutputReturnType[T]\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${output.toString('hex')}` as TypeOutputReturnType[T]\n  }\n}\n","import { HashParams } from \"./hashParams\";\n\nexport class URLWithHashParams extends URL {\n  hashParams: HashParams = new URLSearchParams();\n\n  toString(): string {\n    this.hash = this.hashParams.toString();\n    return super.toString.call(this);\n  }\n}\n","import { Duplex } from \"readable-stream\";\n\nfunction noop(): void {\n  return undefined;\n}\n\nconst SYN = \"SYN\";\nconst ACK = \"ACK\";\nconst BRK = \"BRK\";\n\nexport default class BasePostMessageStream extends Duplex {\n  _init: boolean;\n\n  _haveSyn: boolean;\n\n  _name: string;\n\n  _target: string;\n\n  _targetWindow: Window;\n\n  _targetOrigin: string;\n\n  _onMessage: any;\n\n  _synIntervalId: number;\n\n  constructor({\n    name,\n    target,\n    targetWindow = window,\n    targetOrigin = \"*\",\n  }: {\n    name: string;\n    target: string;\n    targetWindow?: Window;\n    targetOrigin?: string;\n  }) {\n    super({\n      objectMode: true,\n    });\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n    this._init = false;\n    this._haveSyn = false;\n    this._name = name;\n    this._target = target; // target origin\n    this._targetWindow = targetWindow;\n    this._targetOrigin = targetOrigin;\n    this._onMessage = this.onMessage.bind(this);\n    this._synIntervalId = null;\n\n    window.addEventListener(\"message\", this._onMessage, false);\n    this._handShake();\n  }\n\n  _break(): void {\n    this.cork();\n    this._write(BRK, null, noop);\n    this._haveSyn = false;\n    this._init = false;\n  }\n\n  _handShake(): void {\n    this._write(SYN, null, noop);\n    this.cork();\n  }\n\n  _onData(data: unknown): void {\n    if (!this._init) {\n      // listen for handshake\n      if (data === SYN) {\n        this._haveSyn = true;\n        this._write(ACK, null, noop);\n      } else if (data === ACK) {\n        this._init = true;\n        if (!this._haveSyn) {\n          this._write(ACK, null, noop);\n        }\n        this.uncork();\n      }\n    } else if (data === BRK) {\n      this._break();\n    } else {\n      // forward message\n      try {\n        this.push(data);\n      } catch (err) {\n        this.emit(\"error\", err);\n      }\n    }\n  }\n\n  _postMessage(data: unknown): void {\n    const originConstraint = this._targetOrigin;\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n\n  onMessage(event: MessageEvent): void {\n    const message = event.data;\n\n    // validate message\n    if (\n      (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin) ||\n      event.source !== this._targetWindow ||\n      typeof message !== \"object\" ||\n      message.target !== this._name ||\n      !message.data\n    ) {\n      return;\n    }\n\n    this._onData(message.data);\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(data: unknown, _, cb: () => void): void {\n    this._postMessage(data);\n    cb();\n  }\n\n  _destroy(): void {\n    window.removeEventListener(\"message\", this._onMessage, false);\n  }\n}\n","import { EventEmitter } from \"events\";\n\ntype Handler = (...args: any[]) => void;\ninterface EventMap {\n  [k: string]: Handler | Handler[] | undefined;\n}\n\nfunction safeApply<T, A extends any[]>(handler: (this: T, ...handlerArgs: A) => void, context: T, args: A): void {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone<T>(arr: T[]): T[] {\n  const n = arr.length;\n  const copy = new Array(n);\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\n\nexport default class SafeEventEmitter extends EventEmitter {\n  emit(type: string, ...args: any[]): boolean {\n    let doError = type === \"error\";\n\n    const events: EventMap = (this as any)._events;\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      let er;\n      if (args.length > 0) {\n        [er] = args;\n      }\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : \"\"}`);\n      (err as any).context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n}\n","import stringify from \"fast-safe-stringify\";\n\nexport default class SerializableError<T> extends Error {\n  public code: number;\n\n  public data: T;\n\n  constructor({ code, message, data }: { code: number; message: string; data?: T }) {\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n    this.code = code;\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString(): string {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack,\n    });\n  }\n}\n","import { randomId } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\nexport type Json = boolean | number | string | null | { [property: string]: Json } | Json[];\n\nexport type JRPCVersion = \"2.0\";\nexport type JRPCId = number | string | void;\n\nexport type ConsoleLike = Pick<Console, \"log\" | \"warn\" | \"error\" | \"debug\" | \"info\" | \"trace\">;\nexport interface JRPCBase {\n  jsonrpc?: JRPCVersion;\n  id?: JRPCId;\n}\n\nexport interface JRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: any;\n}\n\nexport const getRpcPromiseCallback =\n  (resolve: (value?: any) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: JRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n\nexport interface JRPCRequest<T> extends JRPCBase {\n  method: string;\n  params?: T;\n}\n\nexport type JRPCEngineNextCallback = (cb?: (done: (error?: Error) => void) => void) => void;\nexport type JRPCEngineEndCallback = (error?: Error) => void;\nexport type JRPCEngineReturnHandler = (done: (error?: Error) => void) => void;\n\ninterface IdMapValue {\n  req: JRPCRequest<unknown>;\n  res: JRPCResponse<unknown>;\n  next: JRPCEngineNextCallback;\n  end: JRPCEngineEndCallback;\n}\n\ninterface IdMap {\n  [requestId: string]: IdMapValue;\n}\n\nexport type JRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: JRPCResponse<U>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => void;\n\nexport function createErrorMiddleware(log: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({ code: -32603, message: \"invalid method\" });\n        end();\n        return;\n      }\n      next((done) => {\n        const { error } = res;\n        if (!error) {\n          return done();\n        }\n        log.error(`OpenLogin - RPC Error: ${error.message}`, error);\n        return done();\n      });\n    } catch (error) {\n      log.error(`OpenLogin - RPC Error thrown: ${error.message}`, error);\n      res.error = new SerializableError({ code: -32603, message: error.message });\n      end();\n    }\n  };\n}\n\nexport function createStreamMiddleware(): { events: SafeEventEmitter; middleware: JRPCMiddleware<unknown, unknown>; stream: Duplex } {\n  const idMap: IdMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res: JRPCResponse<unknown>) {\n    const context = idMap[res.id as unknown as string];\n    if (!context) {\n      throw new Error(`StreamMiddleware - Unknown response id \"${res.id}\"`);\n    }\n\n    delete idMap[res.id as unknown as string];\n    // copy whole res onto original res\n    Object.assign(context.res, res);\n    // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n    setTimeout(context.end);\n  }\n\n  function processNotification(res: JRPCRequest<unknown>) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res: JRPCResponse<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    let err;\n    try {\n      const isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res as unknown as JRPCRequest<unknown>);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      err = _err;\n    }\n    // continue processing stream\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage,\n  });\n\n  const middleware: JRPCMiddleware<unknown, unknown> = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req);\n    // register request on id map\n    idMap[req.id as unknown as string] = { req, res, next, end };\n  };\n\n  return { events, middleware, stream };\n}\n\ntype ScaffoldMiddlewareHandler<T, U> = JRPCMiddleware<T, U> | Json;\n\nexport function createScaffoldMiddleware(handlers: {\n  [methodName: string]: ScaffoldMiddlewareHandler<unknown, unknown>;\n}): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method];\n    // if no handler, return\n    if (handler === undefined) {\n      return next();\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    }\n    // if handler is some other value, use as result\n    res.result = handler;\n    return end();\n  };\n}\n\nexport function createIdRemapMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = randomId();\n    req.id = newId;\n    res.id = newId;\n    next((done) => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nexport function createLoggerMiddleware(logger: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nexport type AsyncJRPCEngineNextCallback = () => Promise<void>;\n\ntype Maybe<T> = Partial<T> | null | undefined;\n\nexport interface JRPCSuccess<T> extends JRPCBase {\n  result: Maybe<T>;\n}\n\nexport interface JRPCError {\n  code: number;\n  message: string;\n  data?: unknown;\n  stack?: string;\n}\n\nexport interface PendingJRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: Error | JRPCError;\n}\n\nexport interface JRPCFailure extends JRPCBase {\n  error: JRPCError;\n}\n\nexport type AsyncJRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: PendingJRPCResponse<U>, next: AsyncJRPCEngineNextCallback) => Promise<void>;\n\ntype ReturnHandlerCallback = (error: null | Error) => void;\n\nexport function createAsyncMiddleware<T, U>(asyncMiddleware: AsyncJRPCMiddleware<T, U>): JRPCMiddleware<T, U> {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise: () => void;\n    const nextPromise = new Promise<void>((resolve) => {\n      resolveNextPromise = resolve;\n    });\n\n    let returnHandlerCallback: unknown = null;\n    let nextWasCalled = false;\n\n    // This will be called by the consumer's async middleware.\n    const asyncNext = async () => {\n      nextWasCalled = true;\n\n      // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next((runReturnHandlersCallback) => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n        (returnHandlerCallback as ReturnHandlerCallback)(null);\n      } else {\n        end(null);\n      }\n    } catch (error) {\n      if (returnHandlerCallback) {\n        (returnHandlerCallback as ReturnHandlerCallback)(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n","import randombytes from \"randombytes\";\n\nexport const randomId = (): string => randombytes(32).toString(\"hex\");\n","import { serializeError } from \"eth-rpc-errors\";\nimport { Duplex } from \"readable-stream\";\n\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCEngineReturnHandler, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"./jrpc\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nexport class JRPCEngine extends SafeEventEmitter {\n  private _middleware: JRPCMiddleware<unknown, unknown>[];\n\n  constructor() {\n    super();\n    this._middleware = [];\n  }\n\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  private static async _runAllMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middlewareStack: JRPCMiddleware<unknown, unknown>[]\n  ): Promise<\n    [\n      unknown, // error\n      boolean, // isComplete\n      JRPCEngineReturnHandler[]\n    ]\n  > {\n    const returnHandlers: JRPCEngineReturnHandler[] = [];\n    let error = null;\n    let isComplete = false;\n\n    // Go down stack of middleware, call and collect optional returnHandlers\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n      if (isComplete) {\n        break;\n      }\n    }\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware exection,\n   * and a boolean indicating whether the request should end.\n   */\n  private static _runMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middleware: JRPCMiddleware<unknown, unknown>,\n    returnHandlers: JRPCEngineReturnHandler[]\n  ): Promise<[unknown, boolean]> {\n    return new Promise((resolve) => {\n      const end: JRPCEngineEndCallback = (err?: unknown) => {\n        const error = err || res.error;\n        if (error) {\n          res.error = serializeError(error);\n        }\n        // True indicates that the request should end\n        resolve([error, true]);\n      };\n\n      const next: JRPCEngineNextCallback = (returnHandler?: JRPCEngineReturnHandler) => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({ code: -32603, message: \"JRPCEngine: 'next' return handlers must be functions\" }));\n            }\n            returnHandlers.push(returnHandler);\n          }\n\n          // False indicates that the request should not end\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error) {\n        end(error);\n      }\n    });\n  }\n\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n  private static async _runReturnHandlers(handlers: JRPCEngineReturnHandler[]): Promise<void> {\n    for (const handler of handlers) {\n      await new Promise<void>((resolve, reject) => {\n        handler((err) => (err ? reject(err) : resolve()));\n      });\n    }\n  }\n\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n  private static _checkForCompletion(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, isComplete: boolean): void {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({ code: -32603, message: \"Response has no error or result for request\" });\n    }\n    if (!isComplete) {\n      throw new SerializableError({ code: -32603, message: \"Nothing ended request\" });\n    }\n  }\n\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n  push<T, U>(middleware: JRPCMiddleware<T, U>): void {\n    this._middleware.push(middleware as JRPCMiddleware<unknown, unknown>);\n  }\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @param callback - An error-first callback that will receive the response.\n   */\n  handle<T, U>(request: JRPCRequest<T>, callback: (error: unknown, response: JRPCResponse<U>) => void): void;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @param callback - An error-first callback that will receive the array of\n   * responses.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[], callback: (error: unknown, responses: JRPCResponse<U>[]) => void): void;\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @returns A promise that resolves with the response, or rejects with an\n   * error.\n   */\n  handle<T, U>(request: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @returns A promise that resolves with the array of responses, or rejects\n   * with an error.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[]): Promise<JRPCResponse<U>[]>;\n\n  handle(req: unknown, cb?: any) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req as JRPCRequest<unknown>, cb);\n    }\n    return this._promiseHandle(req as JRPCRequest<unknown>);\n  }\n\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n  asMiddleware(): JRPCMiddleware<unknown, unknown> {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError as Error);\n        }\n\n        return next(async (handlerCallback) => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error) {\n            return handlerCallback(error);\n          }\n          return handlerCallback();\n        });\n      } catch (error) {\n        return end(error);\n      }\n    };\n  }\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[]): Promise<JRPCResponse<unknown>[]>;\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[], cb: (error: unknown, responses?: JRPCResponse<unknown>[]) => void): Promise<void>;\n\n  private async _handleBatch(\n    reqs: JRPCRequest<unknown>[],\n    cb?: (error: unknown, responses?: JRPCResponse<unknown>[]) => void\n  ): Promise<JRPCResponse<unknown>[] | void> {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all(\n        // 1. Begin executing each request in the order received\n        reqs.map(this._promiseHandle.bind(this))\n      );\n\n      // 3. Return batch response\n      if (cb) {\n        return cb(null, responses);\n      }\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * A promise-wrapped _handle.\n   */\n  private _promiseHandle(req: JRPCRequest<unknown>): Promise<JRPCResponse<unknown>> {\n    return new Promise((resolve) => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        resolve(res);\n      });\n    });\n  }\n\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n  private async _handle(callerReq: JRPCRequest<unknown>, cb: (error: unknown, response: JRPCResponse<unknown>) => void): Promise<void> {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({ code: -32603, message: \"request must be plain object\" });\n      return cb(error, { id: undefined, jsonrpc: \"2.0\", error });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({ code: -32603, message: \"method must be string\" });\n      return cb(error, { id: callerReq.id, jsonrpc: \"2.0\", error });\n    }\n\n    const req: JRPCRequest<unknown> = { ...callerReq };\n    const res: JRPCResponse<unknown> = {\n      id: req.id,\n      jsonrpc: req.jsonrpc,\n    };\n    let error: Error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n      if (!res.error) {\n        res.error = serializeError(error);\n      }\n    }\n\n    return cb(error, res as JRPCResponse<unknown>);\n  }\n\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n  private async _processRequest(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n    // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n    JRPCEngine._checkForCompletion(req, res, isComplete);\n\n    // The return handlers should run even if an error was encountered during\n    // middleware processing.\n    await JRPCEngine._runReturnHandlers(returnHandlers);\n\n    // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n    if (error) {\n      throw error;\n    }\n  }\n}\n\nexport function mergeMiddleware(middlewareStack: JRPCMiddleware<unknown, unknown>[]): JRPCMiddleware<unknown, unknown> {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n\nexport interface EngineStreamOptions {\n  engine: JRPCEngine;\n}\n\nexport function createEngineStream(opts: EngineStreamOptions): Duplex {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const { engine } = opts;\n  // eslint-disable-next-line prefer-const\n  let stream: Duplex;\n\n  function read() {\n    return undefined;\n  }\n\n  function write(req: JRPCRequest<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({ objectMode: true, read, write });\n\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message) => {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\n","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nexport default class Substream extends Duplex {\n  private readonly _parent: any;\n\n  private readonly _name: string;\n\n  constructor({ parent, name }: { parent: any; name: string }) {\n    super({ objectMode: true });\n    this._parent = parent;\n    this._name = name;\n  }\n\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n  _read(): void {\n    return undefined;\n  }\n\n  /**\n   * Called when data should be written to this writable stream.\n   *\n   * @param chunk - Arbitrary object to write\n   * @param encoding - Encoding to use when writing payload\n   * @param callback - Called when writing is complete or an error occurs\n   */\n  _write(chunk: unknown, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    this._parent.push({\n      name: this._name,\n      data: chunk,\n    });\n    callback();\n  }\n}\n","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport eos from \"end-of-stream\";\nimport once from \"once\";\nimport pump from \"pump\";\nimport { Duplex } from \"readable-stream\";\nimport type { Readable, Writable } from \"stream\";\n\nimport Substream from \"./substream\";\n\nexport const IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nexport type Stream = Readable | Writable;\n\ninterface Chunk {\n  name: string;\n  data: unknown;\n}\n\nexport class ObjectMultiplex extends Duplex {\n  public _substreams: Record<string, Substream | typeof IGNORE_SUBSTREAM>;\n\n  getStream: (name: string) => Substream | symbol;\n\n  constructor(opts: Record<string, unknown> = {}) {\n    super({\n      ...opts,\n      objectMode: true,\n    });\n    this._substreams = {};\n  }\n\n  createStream(name: string): Substream {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n\n    // create substream\n    const substream = new Substream({ parent: this, name });\n    this._substreams[name] = substream;\n\n    // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    anyStreamEnd(this, (_error?: Error | null) => substream.destroy(_error || undefined));\n\n    return substream;\n  }\n\n  // ignore streams (dont display orphaned data warning)\n  ignoreStream(name: string): void {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n    // set\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(chunk: Chunk, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    const { name, data } = chunk;\n\n    if (!name) {\n      window.console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n      return callback();\n    }\n\n    // get corresponding substream\n    const substream = this._substreams[name];\n    if (!substream) {\n      window.console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n      return callback();\n    }\n\n    // push data into substream\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n}\n\n// util\nfunction anyStreamEnd(stream: ObjectMultiplex, _cb: (error?: Error | null) => void) {\n  const cb = once(_cb);\n  eos(stream as unknown as Stream, { readable: false }, cb);\n  eos(stream as unknown as Stream, { writable: false }, cb);\n}\n\nexport function setupMultiplex(stream: Duplex): ObjectMultiplex {\n  const mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name: string) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n\n  pump(stream as unknown as Stream, mux as unknown as Stream, stream as unknown as Stream, (err) => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n","/*\r\n *      bignumber.js v9.1.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","import { JRPCEngine, JRPCMiddleware, JRPCRequest, JRPCResponse, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors, serializeError } from \"eth-rpc-errors\";\nimport getCreateRandomId from \"json-rpc-random-id\";\n\nimport { BaseConfig, BaseState, IController } from \"../interfaces\";\nexport const createRandomId = getCreateRandomId();\n\nexport interface ProviderConfig {\n  /**\n   * Block explorer url for the chain\n   * @example https://ropsten.etherscan.io\n   */\n  blockExplorerUrl: string;\n  /**\n   * Logo url for the base token\n   */\n  logo: string;\n  /**\n   * Name for ticker\n   * @example 'Binance Token', 'Ethereum', 'Matic Network Token'\n   */\n  tickerName: string;\n  /**\n   * Symbol for ticker\n   * @example BNB, ETH\n   */\n  ticker: string;\n  /**\n   * RPC target Url for the chain\n   * @example https://ropsten.infura.io/v3/YOUR_API_KEY\n   */\n  rpcTarget: string;\n  /**\n   * Chain Id parameter(hex with 0x prefix) for the network. Mandatory for all networks. (assign one with a map to network identifier for platforms)\n   * @example 0x1 for mainnet, 'loading' if not connected to anything yet or connection fails\n   * @defaultValue 'loading'\n   */\n  chainId: string;\n  /**\n   * Display name for the network\n   */\n  displayName: string;\n}\n\n/**\n * Custom network properties\n * @example isEIP1559Compatible: true etc.\n */\nexport interface NetworkProperties {\n  [key: string]: number | string | boolean;\n}\n\n/**\n *\n */\nexport interface NetworkState extends BaseState {\n  /**\n   * Chain Id for the current network\n   */\n  chainId: string;\n  providerConfig: ProviderConfig;\n  properties: NetworkProperties;\n}\n\nexport interface NetworkConfig extends BaseConfig {\n  providerConfig: ProviderConfig;\n}\n\nexport interface INetworkController<C, S> extends IController<C, S> {\n  /**\n   * Gets the chainId of the network\n   */\n  getNetworkIdentifier(): string;\n\n  /**\n   * Sets provider for the current network controller\n   * @param providerConfig - Provider config object\n   */\n  setProviderConfig(providerConfig: ProviderConfig): void;\n  /**\n   * Connects to the rpcUrl for the current selected provider\n   */\n  lookupNetwork(): Promise<void>;\n}\n\nexport type BlockData = string | string[];\n\nexport type Block = Record<string, BlockData>;\n\nexport type SendAsyncCallBack = (err: Error, providerRes: JRPCResponse<Block>) => void;\n\nexport type SendCallBack<U> = (err: any, providerRes: U) => void;\n\nexport type Payload = Partial<JRPCRequest<string[]>>;\n\nexport interface RequestArguments<T> {\n  method: string;\n  params?: T;\n}\nexport type Maybe<T> = T | Partial<T> | null | undefined;\n\nexport interface SafeEventEmitterProvider extends SafeEventEmitter {\n  sendAsync: <T, U>(req: JRPCRequest<T>) => Promise<U>;\n  send: <T, U>(req: JRPCRequest<T>, callback: SendCallBack<U>) => void;\n  request: <T, U>(args: RequestArguments<T>) => Promise<Maybe<U>>;\n}\n\nexport interface ExtendedJsonRpcRequest<T> extends JRPCRequest<T> {\n  skipCache?: boolean;\n}\n\nexport function providerFromEngine(engine: JRPCEngine): SafeEventEmitterProvider {\n  const provider: SafeEventEmitterProvider = new SafeEventEmitter() as SafeEventEmitterProvider;\n  // handle both rpc send methods\n  provider.sendAsync = async <T, U>(req: JRPCRequest<T>) => {\n    const res = await engine.handle(req);\n    if (res.error) {\n      const err = serializeError(res.error, {\n        fallbackError: {\n          message: res.error?.message || res.error.toString(),\n          code: res.error?.code || -32603,\n        },\n      });\n\n      throw ethErrors.rpc.internal(err);\n    }\n    return res.result as U;\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  provider.send = <T, U>(req: JRPCRequest<T>, callback: (error: any, providerRes: U) => void) => {\n    if (typeof callback !== \"function\") {\n      throw new Error('Must provide callback to \"send\" method.');\n    }\n    engine.handle(req, callback);\n  };\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message: string) => {\n      provider.emit(\"data\", null, message);\n    });\n  }\n\n  provider.request = async <T, U>(args: RequestArguments<T>) => {\n    const req: JRPCRequest<T> = {\n      ...args,\n      id: createRandomId(),\n      jsonrpc: \"2.0\",\n    };\n    const res = await provider.sendAsync(req);\n    return res as U;\n  };\n  return provider;\n}\n\nexport function providerFromMiddleware(middleware: JRPCMiddleware<string[], unknown>): SafeEventEmitterProvider {\n  const engine = new JRPCEngine();\n  engine.push(middleware);\n  const provider: SafeEventEmitterProvider = providerFromEngine(engine);\n  return provider;\n}\n\nexport function providerAsMiddleware(provider: SafeEventEmitterProvider): JRPCMiddleware<unknown, unknown> {\n  return async (req, res, _next, end) => {\n    // send request to provider\n    try {\n      const providerRes: unknown = await provider.sendAsync<unknown, unknown>(req);\n      res.result = providerRes;\n      return end();\n    } catch (error) {\n      return end(error.message);\n    }\n  };\n}\n","export const FEATURES_PROVIDER_CHANGE_WINDOW = { height: 660, width: 375 };\nexport const FEATURES_DEFAULT_WALLET_WINDOW = { height: 740, width: 1315 };\nexport const FEATURES_DEFAULT_POPUP_WINDOW = { height: 700, width: 1200 };\nexport const FEATURES_CONFIRM_WINDOW = { height: 700, width: 450 };\n\nexport const POPUP_LOADED = \"popup_loaded\";\nexport const POPUP_RESULT = \"popup_result\";\n\nexport const SETUP_COMPLETE = \"setup_complete\";\n\nexport const ACTIVITY_ACTION_ALL = \"walletActivity.allTransactions\";\nexport const ACTIVITY_ACTION_SEND = \"walletActivity.send\";\nexport const ACTIVITY_ACTION_BURN = \"walletActivity.burn\";\nexport const ACTIVITY_ACTION_RECEIVE = \"walletActivity.receive\";\nexport const ACTIVITY_ACTION_TOPUP = \"walletActivity.topup\";\n\nexport const ACTIVITY_PERIOD_ALL = \"walletActivity.all\";\nexport const ACTIVITY_PERIOD_WEEK_ONE = \"walletActivity.lastOneWeek\";\nexport const ACTIVITY_PERIOD_MONTH_ONE = \"walletActivity.lastOneMonth\";\nexport const ACTIVITY_PERIOD_MONTH_SIX = \"walletActivity.lastSixMonts\";\n\nexport const ACTIVITY_STATUS_SUCCESSFUL = \"walletActivity.successful\";\nexport const ACTIVITY_STATUS_UNSUCCESSFUL = \"walletActivity.unsuccessful\";\nexport const ACTIVITY_STATUS_PENDING = \"walletActivity.pending\";\nexport const ACTIVITY_STATUS_CANCELLED = \"walletActivity.cancelled\";\nexport const ACTIVITY_STATUS_CANCELLING = \"walletActivity.cancelling\";\n\nexport const COMMUNICATION_NOTIFICATIONS = {\n  IFRAME_STATUS: \"iframe_status\",\n\n  // Tell embed to create the window\n  CREATE_WINDOW: \"create_window\",\n  // Tell embed to close the window\n  CLOSE_WINDOW: \"close_window\",\n\n  USER_LOGGED_IN: \"user_logged_in\",\n  USER_LOGGED_OUT: \"user_logged_out\",\n};\n\nexport const COMMUNICATION_JRPC_METHODS = {\n  LOGOUT: \"logout\",\n  WALLET_INSTANCE_ID: \"wallet_instance_id\",\n  USER_INFO: \"user_info\",\n  SET_PROVIDER: \"set_provider\",\n  TOPUP: \"topup\",\n  IFRAME_STATUS: \"iframe_status\",\n  // embed has opened the window as requested\n  OPENED_WINDOW: \"opened_window\",\n  // user has closed the window from embed's side\n  CLOSED_WINDOW: \"closed_window\",\n  GET_PROVIDER_STATE: \"get_provider_state\",\n  LOGIN_WITH_PRIVATE_KEY: \"login_with_private_key\",\n};\n\nexport const PROVIDER_JRPC_METHODS = {\n  GET_PROVIDER_STATE: \"wallet_get_provider_state\",\n};\n\nexport const PROVIDER_NOTIFICATIONS = {\n  ACCOUNTS_CHANGED: \"wallet_accounts_changed\",\n  CHAIN_CHANGED: \"wallet_chain_changed\",\n  UNLOCK_STATE_CHANGED: \"wallet_unlock_state_changed\",\n};\n\nexport const BROADCAST_CHANNELS = {\n  REDIRECT_CHANNEL: \"redirect_channel\",\n  PROVIDER_CHANGE_CHANNEL: \"torus_provider_change_channel\",\n  TRANSACTION_CHANNEL: \"torus_channel\",\n  MESSAGE_CHANNEL: \"torus_message_channel\",\n  WALLET_LOGOUT_CHANNEL: \"wallet_logout_channel\",\n  WALLET_SELECTED_ADDRESS_CHANNEL: \"wallet_selected_address_channel\",\n  WALLET_NETWORK_CHANGE_CHANNEL: \"wallet_network_change_channel\",\n  WALLET_ACCOUNT_IMPORT_CHANNEL: \"wallet_account_import_channel\",\n  THEME_CHANGE: \"theme_change_channel\",\n};\nexport const BROADCAST_CHANNELS_MSGS = {\n  LOGOUT: \"logout\",\n  ACCOUNT_IMPORTED: \"account_imported\",\n  SELECTED_ADDRESS_CHANGE: \"selected_address_change\",\n  NETWORK_CHANGE: \"network_change\",\n  SET_THEME: \"set_theme\",\n};\n\nexport type BROADCAST_CHANNELS_MSGS_TYPE = typeof BROADCAST_CHANNELS_MSGS[keyof typeof BROADCAST_CHANNELS_MSGS];\n","import { BigNumber } from \"bignumber.js\";\nimport { addHexPrefix, bufferToInt, ecsign, fromSigned, hashPersonalMessage, intToBuffer, stripHexPrefix, toUnsigned } from \"ethereumjs-util\";\n\nimport { TransactionMeta } from \"../Transaction/ITransactionController\";\n\n/**\n * General utility functions\n */\n\nexport function intToHex(i: number): string {\n  const hex = i.toString(16);\n  return `0x${hex}`;\n}\n\n/**\n * Returns a random number. Don't use for cryptographic purposes.\n * @returns a random number\n */\nexport const randomId = (): string => Math.random().toString(36).slice(2);\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== \"\" && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(`Expected an unprefixed hex string. Received: ${hexString}`);\n  }\n\n  if (targetLength < 0) {\n    throw new Error(`Expected a non-negative integer target length. Received: ${targetLength}`);\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, \"0\");\n}\n/**\n * Concatenate an extended ECDSA signature into a hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString(\"hex\"), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString(\"hex\"), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\nexport function timeout(duration: number): Promise<void> {\n  return new Promise((resolve) => {\n    const timeoutRef = window.setTimeout(() => {\n      resolve();\n      window.clearTimeout(timeoutRef);\n    }, duration);\n  });\n}\n\nexport const getHeaders = (jwt: string) => {\n  return {\n    headers: {\n      Authorization: `Bearer ${jwt}`,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n};\n\n/**\n * Text/number formatting utilities\n */\nexport const formatSmallNumbers = (number: number, currency = \"usd\", noTilde = false): string => {\n  const finalNumber = BigNumber.isBigNumber(number) ? number.toNumber() : number;\n  if (!Number.isFinite(finalNumber)) return \"\";\n  const value = currency.toLowerCase() === \"usd\" ? parseFloat(Number(finalNumber).toFixed(2)) : parseFloat(Number(finalNumber).toFixed(5));\n  const tilde = value > 0 ? \"~ \" : \"\";\n  return `${currency.toLowerCase() === \"usd\" || noTilde ? \"\" : tilde}${Number(value)} ${currency.toUpperCase()}`;\n};\n\nexport const addressSlicer = (address: string, sliceLength = 5): string => {\n  if (address.length < 11) {\n    return address;\n  }\n  if (typeof address !== \"string\") return \"\";\n  return `${address.slice(0, sliceLength)}...${address.slice(-sliceLength)}`;\n};\n\nexport const significantDigits = (number: number | BigNumber, perc = false, length_ = 2): number | BigNumber => {\n  let input = !BigNumber.isBigNumber(number) ? new BigNumber(number) : number;\n  if (input.isZero()) return input;\n  if (perc) {\n    input = input.times(new BigNumber(100));\n  }\n  let depth;\n  if (input.gte(new BigNumber(1))) {\n    depth = length_;\n  } else {\n    depth = length_ - 1 + Math.ceil(Math.log10(new BigNumber(\"1\").div(input).toNumber()));\n  }\n  const shift = new BigNumber(10).pow(new BigNumber(depth));\n  const roundedNumber = Math.round(shift.times(input).toNumber()) / shift.toNumber();\n  return roundedNumber;\n};\nexport const formatDate = (inputDate: string): string => {\n  const monthList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const date = new Date(inputDate);\n  const day = date.getDate();\n  const month = monthList[date.getMonth()];\n  const year = date.getFullYear();\n  return `${day} ${month} ${year}`;\n};\n\nexport const formatTime = (time: string): string => {\n  return new Date(time).toTimeString().slice(0, 8);\n};\n\n/**\n * Network utilities\n */\nexport const transactionMatchesNetwork = <T>(transaction: TransactionMeta<T>, chainId: string): boolean => {\n  if (typeof transaction.chainId !== \"undefined\") {\n    return transaction.chainId === chainId;\n  }\n  return false;\n};\n\n/**\n * Signing utils\n */\nexport const hashMessage = (message: string): Buffer => {\n  const bufferedMessage = Buffer.from(message, \"utf8\");\n  const el = hashPersonalMessage(bufferedMessage);\n  return el;\n};\n\nexport const signMessage = (privateKey: string, data: string): string => {\n  const privKey = Buffer.from(privateKey, \"hex\");\n  const message = stripHexPrefix(data);\n  const msgSig = ecsign(Buffer.from(message, \"hex\"), privKey);\n  const rawMsgSig = concatSig(intToBuffer(msgSig.v), msgSig.r, msgSig.s);\n  return rawMsgSig;\n};\n\n/**\n * popup handler utils\n */\nexport function getPopupFeatures({ width: w, height: h }: { width: number; height: number }): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport const broadcastChannelOptions = {\n  // type: 'localstorage', // (optional) enforce a type, oneOf['native', 'idb', 'localstorage', 'node']\n  webWorkerSupport: false, // (optional) set this to false if you know that your channel will never be used in a WebWorker (increases performance)\n};\n\nexport function getCustomDeviceInfo(): Record<string, string> | undefined {\n  if ((navigator as any)?.brave) {\n    return {\n      browser: \"Brave\",\n    };\n  }\n}\nexport class UserError extends Error {}\n\nexport const handleRedirectParameters = (\n  hash: string,\n  queryParameters: Record<string, string>\n): { error: string; instanceParameters: Record<string, string>; hashParameters: Record<string, string> } => {\n  const hashParameters: Record<string, string> = {};\n  const hashUrl = new URL(`${window.location.origin}/?${hash.slice(1)}`);\n  hashUrl.searchParams.forEach((value, key) => {\n    hashParameters[key] = value;\n  });\n  let instanceParameters = {};\n  let error = \"\";\n  if (!queryParameters.windowId) {\n    if (Object.keys(hashParameters).length > 0 && hashParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(hashParameters.state)))) || {};\n      error = hashParameters.error_description || hashParameters.error || error;\n    } else if (Object.keys(queryParameters).length > 0 && queryParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(queryParameters.state)))) || {};\n      if (queryParameters.error) error = queryParameters.error;\n    }\n  }\n  return { error, instanceParameters, hashParameters };\n};\n\nexport function sleep<T>(ms: number): Promise<T> {\n  return new Promise<T>((resolve) => setTimeout(resolve, ms));\n}\n","import { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nimport { BaseConfig, BaseState } from \"../interfaces\";\n\n/**\n * The status of the transaction. Each status represents the state of the transaction internally\n * in the wallet. Some of these correspond with the state of the transaction on the network, but\n * some are wallet-specific.\n */\n\nexport enum TransactionStatus {\n  approved = \"approved\",\n  cancelled = \"cancelled\",\n  confirmed = \"confirmed\",\n  failed = \"failed\",\n  finalized = \"finalized\",\n  processed = \"processed\",\n  rejected = \"rejected\",\n  signed = \"signed\",\n  submitted = \"submitted\",\n  unapproved = \"unapproved\",\n  dropped = \"dropped\",\n  expired = \"expired\",\n}\n\nexport const TRANSACTION_TYPES = {\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  WASM_BASED_DEPLOY: \"wasmBasedDeploy\",\n  STANDARD_TRANSACTION: \"transaction\",\n  STANDARD_PAYMENT_TRANSACTION: \"payment_transaction\", // specific to chains like solana and casper\n};\n\nexport type TRANSACTION_TYPE = typeof TRANSACTION_TYPES[keyof typeof TRANSACTION_TYPES];\n\nexport const TX_EVENTS = {\n  TX_WARNING: \"tx:warning\",\n  TX_ERROR: \"tx:error\",\n  TX_FAILED: \"tx:failed\",\n  TX_CONFIRMED: \"tx:confirmed\",\n  TX_DROPPED: \"tx:dropped\",\n  TX_EXPIRED: \"tx:expired\",\n  TX_STATUS_UPDATE: \"tx:status_update\",\n  TX_UNAPPROVED: \"tx:unapproved\",\n};\n\nexport interface TransactionMeta<T> {\n  id: string;\n  transaction: T;\n  transactionType: TRANSACTION_TYPE;\n  dappSuggestedTransaction: Partial<T>;\n  chainId: string;\n  origin: string;\n  time: number;\n  status: TransactionStatus;\n  updated_at?: string; // iso date string\n  transactionHash?: string;\n  rawTransaction?: string;\n  txReceipt?: unknown;\n  error?: Error;\n  warning?: {\n    error?: string;\n    message?: string;\n  };\n}\n\nexport type BASE_TX_EVENT_TYPE = {\n  txId: string;\n};\n\nexport type TX_ERROR_EVENT_TYPE = BASE_TX_EVENT_TYPE & {\n  error: Error;\n};\n\nexport type TX_FAILED_EVENT_TYPE = BASE_TX_EVENT_TYPE & {\n  error: Error;\n};\n\nexport type TX_EXPIRED_EVENT_TYPE = BASE_TX_EVENT_TYPE;\n\nexport type TX_WARNING_EVENT_TYPE<T> = BASE_TX_EVENT_TYPE & {\n  txMeta: TransactionMeta<T>;\n};\n\nexport type TX_CONFIRMED_EVENT_TYPE = BASE_TX_EVENT_TYPE & {\n  txReceipt: unknown;\n};\n\nexport type TX_DROPPED_EVENT_TYPE = BASE_TX_EVENT_TYPE;\n\nexport type TX_STATUS_UPDATE_EVENT_TYPE = BASE_TX_EVENT_TYPE & {\n  status: TransactionStatus;\n};\n\nexport type TX_FINISHED_EVENT_TYPE<T> = BASE_TX_EVENT_TYPE & {\n  txMeta: TransactionMeta<T>;\n};\n\n/**\n * Transaction controller configuration\n */\nexport interface TransactionConfig extends BaseConfig {\n  txHistoryLimit: number;\n}\n\n/**\n * Transaction controller state\n */\nexport interface TransactionState<T> extends BaseState {\n  /**\n   * Transactions by key (id) value (TxMeta)\n   */\n  transactions: Record<string, TransactionMeta<T>>; // all transactions (unapprroved and all others)\n  unapprovedTxs?: Record<string, TransactionMeta<T>>; // only unapproved\n  currentNetworkTxsList?: TransactionMeta<T>[];\n}\n\n/**\n * Result\n *\n * result - Promise resolving to a new transaction hash\n * transactionMeta - Meta information about this new transaction\n */\nexport interface Result<T> {\n  result: Promise<string>;\n  transactionMeta: TransactionMeta<T>;\n}\n\nexport interface ITransactionController<T> {\n  /**\n   * Add a new unapproved transaction to state.\n   * @param transaction - Transaction object to add\n   * @returns - Object containing a promise resolving to the transaction hash if approved\n   */\n  addTransaction(transaction: T, req: JRPCRequest<T & { windowId?: string }> & { origin: string }): Promise<Result<T>>;\n\n  /**\n   * Approves a transaction and updates it's status in state.\n   *\n   * @param transactionID - ID of the transaction to approve\n   * @returns - Promise resolving when this operation completes\n   */\n  approveTransaction(transactionID: string): Promise<void>;\n\n  /**\n   * Cancels a transaction based on its ID by setting its status to \"rejected\"\n   *\n   * @param transactionID - ID of the transaction to cancel\n   */\n  cancelTransaction?(transactionID: string): Promise<void>;\n}\n\nexport interface ITransactionStateManager<T> {\n  addTransactionToState(txMeta: TransactionMeta<T>): TransactionMeta<T>;\n\n  wipeTransactions(address: string): void;\n\n  getTransactions(args: {\n    searchCriteria?: Record<string, (val: unknown) => boolean> | Record<string, unknown>;\n    initialList?: TransactionMeta<T>[];\n    filterToCurrentNetwork?: boolean;\n  }): TransactionMeta<T>[];\n  getApprovedTransactions(address?: string): TransactionMeta<T>[];\n  getPendingTransactions(address?: string): TransactionMeta<T>[];\n  getConfirmedTransactions(address?: string): TransactionMeta<T>[];\n}\n","export default {\n  errors: {\n    disconnected: (): string => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: (): string => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: (method: string): string =>\n      `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number): string => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}}`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Torus: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {},\n};\n","import { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n} as const;\n\nexport const TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = typeof PAYMENT_PROVIDER[keyof typeof PAYMENT_PROVIDER];\n\nexport type TORUS_BUILD_ENV_TYPE = typeof TORUS_BUILD_ENV[keyof typeof TORUS_BUILD_ENV];\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = typeof BUTTON_POSITION[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"transfer\" | \"topup\" | \"home\" | \"settings\" | \"history\" | \"discover\";\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n} as const;\n\nexport type LOGIN_PROVIDER_TYPE = typeof LOGIN_PROVIDER[keyof typeof LOGIN_PROVIDER];\n\nexport interface TorusCtorArgs {\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n}\n\nexport interface NetworkInterface {\n  /**\n   * Block explorer url for the chain\n   * @example https://explorer.solana.com/\n   */\n  blockExplorerUrl: string;\n  /**\n   * Logo url for the base token\n   */\n  logo: string;\n  /**\n   * Name for ticker\n   * @example 'Solana'\n   */\n  tickerName: string;\n  /**\n   * Symbol for ticker\n   * @example SOL\n   */\n  ticker: string;\n  /**\n   * RPC target Url for the chain\n   * @example https://api.devnet.solana.com/\n   */\n  rpcTarget: string;\n  /**\n   * Chain Id parameter(hex with 0x prefix) for the network. Mandatory for all networks. (assign one with a map to network identifier for platforms)\n   * @example 0x1 for mainnet, 0x2 for testnet, 0x3 for devnet,  'loading' if not connected to anything yet or connection fails\n   * @defaultValue 'loading'\n   */\n  chainId: string;\n  /**\n   * Display name for the network\n   */\n  displayName: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Amount Cryptocurrency to buy\n   */\n  cryptoAmount?: number;\n}\n\nexport interface LoginParams {\n  loginProvider?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport type NetworkLabel = \"mainnet-beta\" | \"testnet\" | \"devnet\";\n\nexport interface ThemeParams {\n  /**\n   * If true, enables dark mode\n   * Defaults to false\n   * @defaultValue false\n   */\n  isDark: boolean;\n  /**\n   * Colors object to customize colors in torus theme.\n   *\n   * Contact us for whitelabel. Example provided in `examples/vue-app`\n   */\n  colors: Record<string, string>;\n}\n\nexport interface WhiteLabelParams {\n  /**\n   * App name to display in the UI\n   */\n  name?: string;\n  /**\n   * App url\n   */\n  url?: string;\n  /**\n   * Whitelabel theme\n   */\n  theme: ThemeParams;\n  /**\n   * Language of whitelabel.\n   *\n   * order of preference: Whitelabel language \\> user language (in torus-website) \\> browser language\n   */\n  defaultLanguage?: string;\n  /**\n   * Logo Url to be used in light mode (dark logo)\n   */\n  logoDark: string;\n  /**\n   * Logo Url to be used in dark mode (light logo)\n   */\n  logoLight: string;\n  /**\n   * Shows/hides topup option in torus-website/widget.\n   * Defaults to false\n   * @defaultValue false\n   */\n  topupHide?: boolean;\n  /**\n   * Custom translations. See (examples/vue-app) to configure\n   */\n  customTranslations?: LocaleLinks<unknown>;\n}\nexport interface TorusParams {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface | NetworkLabel;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://solana.tor.us,\n   *\n   * development uses http://localhost:8080 (expects torus-website to be run locally),\n   *\n   * testing uses https://solana-testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: TORUS_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showTorusButton?: boolean;\n  /**\n   * Prefers to use localStorage instead of sessionStorage for torus iframe. Allows longer lived sessions\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useLocalStorage?: boolean;\n  /**\n   * Allows passing external data for initialize\n   *\n   * Defaults to empty object\n   */\n  extraParams?: { [keyof: string]: string };\n  /**\n   * Params to enable whitelabelling of torus website and widget\n   */\n  whiteLabel?: WhiteLabelParams;\n}\n\nexport interface TorusLoginParams {\n  loginProvider?: LOGIN_PROVIDER_TYPE;\n  login_hint?: string;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n}\n\nexport interface BaseProviderState {\n  isConnected: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface InPageProviderState extends BaseProviderState {\n  accounts: null | string[];\n  isUnlocked: boolean;\n}\n\nexport interface CommunicationProviderState extends BaseProviderState {\n  buttonPosition: string;\n  isLoggedIn: boolean;\n  torusWidgetVisibility: boolean;\n  currentLoginProvider: LOGIN_PROVIDER_TYPE;\n  isIFrameFullScreen: boolean;\n}\n\nexport type Maybe<T> = Partial<T> | T | null | undefined;\n\nexport interface UnValidatedJsonRpcRequest extends JRPCRequest<unknown> {\n  windowId?: string;\n}\n\nexport interface RequestArguments<T> {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: T;\n}\n","import { EMBED_TRANSLATION_ITEM, LocaleLinks, LOGIN_PROVIDER } from \"./interfaces\";\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nexport default {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: `torus-${window.location.hostname}`,\n};\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"solana-embed\");\n","import { JRPCMiddleware, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport { NetworkInterface, NetworkLabel } from \"./interfaces\";\nimport log from \"./loglevel\";\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req,\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`Torus - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `Torus: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getWindowId = (): string => Math.random().toString(36).slice(2);\n\nexport const getTorusUrl = async (buildEnv: string): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://solana.tor.us`;\n      logLevel = \"error\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = { height: 660, width: 375 };\nexport const FEATURES_DEFAULT_WALLET_WINDOW = { height: 740, width: 1315 };\nexport const FEATURES_DEFAULT_POPUP_WINDOW = { height: 700, width: 1200 };\nexport const FEATURES_CONFIRM_WINDOW = { height: 600, width: 400 };\n\nexport function storageAvailable(type: \"localStorage\" | \"sessionStorage\"): boolean {\n  let storage: Storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      e &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === \"QuotaExceededError\" ||\n        // Firefox\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n\n/**\n * popup handler utils\n */\nexport function getPopupFeatures({ width: w, height: h }: { width: number; height: number }): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport const getNetworkConfig = (label: NetworkLabel): NetworkInterface | undefined => {\n  switch (label) {\n    case \"mainnet-beta\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x1\",\n        displayName: \"Solana Mainnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://green-dark-sky.solana-mainnet.quiknode.pro/0b4b99540b7930cf590dc7fb0a2d1c9a906fd53c/\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    case \"testnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x2\",\n        displayName: \"Solana Testnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://spring-black-waterfall.solana-testnet.quiknode.pro/89830c37acd15df105b23742d37f33dc85b5eff8/\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    case \"devnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x3\",\n        displayName: \"Solana Devnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.devnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    default:\n      return undefined;\n  }\n};\n","import { createLoggerMiddleware, SafeEventEmitterProvider, SendCallBack } from \"@toruslabs/base-controllers\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  getRpcPromiseCallback,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  ObjectMultiplex,\n  SafeEventEmitter,\n  Stream,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { duplex as isDuplexStream } from \"is-stream\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport { BaseProviderState, Maybe, ProviderOptions, RequestArguments, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, logStreamDisconnectWarning } from \"./utils\";\n\nabstract class BaseProvider<U extends BaseProviderState> extends SafeEventEmitter implements SafeEventEmitterProvider {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n  public readonly isTorus: true;\n\n  _rpcEngine: JRPCEngine;\n\n  jsonRpcConnectionEvents: SafeEventEmitter;\n\n  protected _state: U;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(\n      connectionStream as unknown as Stream,\n      mux as unknown as Stream,\n      connectionStream as unknown as Stream,\n      this._handleStreamDisconnect.bind(this, \"Torus\")\n    );\n\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream as unknown as Stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Stream,\n      jsonRpcConnection.stream as unknown as Stream,\n      this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({ origin: location.origin }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n  async request<TArgs, TResponse>(args: RequestArguments<TArgs>): Promise<Maybe<TResponse>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  send<T, V>(req: JRPCRequest<T>, callback: SendCallBack<V>): void;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  send(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  sendAsync<T, V>(req: JRPCRequest<T>): Promise<V>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  sendAsync(payload: JRPCRequest<unknown>): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  abstract _initializeState(...args: unknown[]): Promise<void>;\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected abstract _rpcRequest(\n    payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[],\n    callback: (...args: unknown[]) => void,\n    isInternal?: boolean\n  ): void;\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInPageProvider#connect\n   */\n  protected abstract _handleConnect(...args: unknown[]): void;\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected abstract _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void;\n}\n\nexport default BaseProvider;\n","import { JRPCEngineNextCallback, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport log from \"loglevel\";\n\nexport interface LoggerMiddlewareOptions {\n  origin: string;\n}\n\nexport function createLoggerMiddleware(options: LoggerMiddlewareOptions) {\n  return function loggerMiddleware(request: JRPCRequest<unknown>, response: JRPCResponse<unknown>, next: JRPCEngineNextCallback): void {\n    next((callback) => {\n      if (response.error) {\n        log.warn(\"Error in RPC response:\\n\", response);\n      }\n      if ((request as unknown as { isTorusInternal: boolean }).isTorusInternal) return;\n      log.info(`RPC (${options.origin}):`, request, \"->\", response);\n      callback();\n    });\n  };\n}\n","export const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport async function documentReady(): Promise<void> {\n  return new Promise<void>((resolve) => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { FEATURES_DEFAULT_POPUP_WINDOW, getPopupFeatures } from \"./utils\";\n\nclass PopupHandler extends SafeEventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  constructor({ url, target, features }: { url: URL; target?: string; features?: string }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, CommunicationWalletProviderState } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError } from \"eth-rpc-errors\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport configuration from \"./config\";\nimport { documentReady, htmlToElement } from \"./embedUtils\";\nimport {\n  BUTTON_POSITION,\n  CommunicationProviderState,\n  EMBED_TRANSLATION_ITEM,\n  LOGIN_PROVIDER_TYPE,\n  ProviderOptions,\n  RequestArguments,\n  UnValidatedJsonRpcRequest,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport PopupHandler from \"./PopupHandler\";\nimport { FEATURES_CONFIRM_WINDOW, getPopupFeatures, getUserLanguage } from \"./utils\";\n\nclass TorusCommunicationProvider extends BaseProvider<CommunicationProviderState> {\n  protected static _defaultState: CommunicationProviderState = {\n    buttonPosition: \"bottom-left\",\n    currentLoginProvider: null,\n    isIFrameFullScreen: false,\n    hasEmittedConnection: false,\n\n    torusWidgetVisibility: false,\n    initialized: false,\n    isLoggedIn: false,\n    isPermanentlyDisconnected: false,\n    isConnected: false,\n  };\n\n  public embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  public torusUrl: string;\n\n  public dappStorageKey: string;\n\n  public windowRefs: Record<string, PopupHandler>;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  private torusAlertContainer: HTMLDivElement;\n\n  private torusIframe: HTMLIFrameElement;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this._state = {\n      ...TorusCommunicationProvider._defaultState,\n    };\n\n    // public state\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {};\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const notificationHandler = (payload: RequestArguments<Record<string, unknown>>) => {\n      const { method, params } = payload;\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const { isFullScreen, rid } = params;\n        this._displayIframe({ isFull: isFullScreen as boolean, rid: rid as string });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const { windowId, url } = params as Record<string, string>;\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const { currentLoginProvider } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider as LOGIN_PROVIDER_TYPE;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n        this._displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn(): boolean {\n    return this._state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen(): boolean {\n    return this._state.isIFrameFullScreen;\n  }\n\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  async _initializeState(params: Record<string, unknown>): Promise<void> {\n    try {\n      const { torusUrl, dappStorageKey, torusAlertContainer, torusIframe } = params;\n      this.torusUrl = torusUrl as string;\n      this.dappStorageKey = dappStorageKey as string;\n      this.torusAlertContainer = torusAlertContainer as HTMLDivElement;\n      this.torusIframe = torusIframe as HTMLIFrameElement;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const { currentLoginProvider, isLoggedIn } = (await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as CommunicationWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  _handleWindow(windowId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    const finalUrl = new URL(url || `${this.torusUrl}/redirect?windowId=${windowId}`);\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += `&dappStorageKey=${this.dappStorageKey}`;\n      else finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n    handledWindow.open();\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n      return;\n    }\n    // Add to collection only if window is opened\n    this.windowRefs[windowId] = handledWindow;\n    // We tell the iframe that the window has been successfully opened\n    this.request<{ windowId: string }, unknown>({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: { windowId },\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request<{ windowId: string }, unknown>({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: { windowId },\n      });\n    });\n  }\n\n  _displayIframe({ isFull = false, rid = \"\" }: { isFull?: boolean; rid?: string } = {}): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    // set phase\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request<{ isIFrameFullScreen: boolean; rid: string }, unknown>({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: { isIFrameFullScreen: isFull, rid },\n    });\n  }\n\n  hideTorusButton(): void {\n    this._state.torusWidgetVisibility = false;\n    this._displayIframe();\n  }\n\n  showTorusButton(): void {\n    this._state.torusWidgetVisibility = true;\n    this._displayIframe();\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected _rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void): void {\n    const cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n    this.tryWindowHandle(_payload as JRPCRequest<unknown>[], cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n  protected _handleConnect(currentLoginProvider: string, isLoggedIn: boolean): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { currentLoginProvider, isLoggedIn });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  // Called if the iframe wants to close the window cause it is done processing the request\n  private _handleCloseWindow(params: { windowId?: string }): void {\n    const { windowId } = params;\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n\n  private async _createPopupBlockAlert(windowId: string, url: string): Promise<void> {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n\n  private getLogoUrl(): string {\n    const logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    return logoUrl;\n  }\n}\n\nexport default TorusCommunicationProvider;\n","import { InPageWalletProviderState, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest, JRPCSuccess } from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError } from \"eth-rpc-errors\";\nimport dequal from \"fast-deep-equal\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport { InPageProviderState, ProviderOptions, RequestArguments, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\n\nclass TorusInPageProvider extends BaseProvider<InPageProviderState> {\n  protected static _defaultState: InPageProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this._state = {\n      ...TorusInPageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.chainId = null;\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = (payload: RequestArguments<unknown[] | Record<string, unknown>>) => {\n      const { method, params } = payload;\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params as unknown[]);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params as Record<string, unknown>);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params as Record<string, unknown>);\n      }\n    };\n\n    // json rpc notification listener\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked } = (await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as InPageWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  _rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId }: { chainId?: string } = {}): void {\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", { chainId });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n}\n\nexport default TorusInPageProvider;\n","/**\n * Returns whether the given image URL exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window): string => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string> {\n  try {\n    const { document } = window;\n\n    // Use the site's favicon if it exists\n    let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    // Search through available icons in no particular order\n    icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async (): Promise<{ name: string; icon: string }> => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\nexport default getSiteMetadata;\n","import { PublicKey, SendOptions, SignaturePubkeyPair, Transaction } from \"@solana/web3.js\";\nimport { COMMUNICATION_JRPC_METHODS } from \"@toruslabs/base-controllers\";\nimport { setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, getRpcPromiseCallback, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nimport TorusCommunicationProvider from \"./communicationProvider\";\nimport configuration from \"./config\";\nimport { documentReady, htmlToElement } from \"./embedUtils\";\nimport TorusInPageProvider from \"./inPageProvider\";\nimport {\n  BUTTON_POSITION,\n  LOGIN_PROVIDER_TYPE,\n  NetworkInterface,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  TORUS_BUILD_ENV,\n  TorusCtorArgs,\n  TorusLoginParams,\n  TorusParams,\n  UnValidatedJsonRpcRequest,\n  UserInfo,\n  WALLET_PATH,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport getSiteMetadata from \"./siteMetadata\";\nimport {\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPopupFeatures,\n  getTorusUrl,\n  getWindowId,\n  storageAvailable,\n} from \"./utils\";\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { version } = require(\"../package.json\");\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\n\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\");\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = `${torusUrl}/frame`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  isInitialized: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  public requestedLoginProvider?: LOGIN_PROVIDER_TYPE;\n\n  provider: TorusInPageProvider;\n\n  communicationProvider: TorusCommunicationProvider;\n\n  dappStorageKey: string;\n\n  isTopupHidden = false;\n\n  private torusAlertContainer: HTMLDivElement;\n\n  private torusUrl: string;\n\n  private torusIframe: HTMLIFrameElement;\n\n  private styleLink: HTMLLinkElement;\n\n  constructor({ modalZIndex = 99999 }: TorusCtorArgs = {}) {\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n\n  get isLoggedIn(): boolean {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n\n  async init({\n    buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    network,\n    showTorusButton = false,\n    useLocalStorage = false,\n    buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n    apiKey = \"torus-default\",\n    extraParams = {},\n    whiteLabel,\n  }: TorusParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const { torusUrl, logLevel } = await getTorusUrl(buildEnv);\n    log.enableAll();\n    log.info(torusUrl, \"url loaded\");\n    log.info(`Solana Embed Version :${version}`);\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";\n    else torusIframeUrl.pathname += \"/frame\";\n\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n\n    torusIframeUrl.hash = hashParams.toString();\n\n    // Iframe code\n    this.torusIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"torusIframe\"\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex.toString()}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>(\n      `<div id=\"torusAlertContainer\" style=\"display:none; z-index: ${this.alertZIndex.toString()}\"></div>`\n    );\n\n    this.styleLink = htmlToElement<HTMLLinkElement>(`<link href=\"${torusUrl}/css/widget.css\" rel=\"stylesheet\" type=\"text/css\">`);\n    const handleSetup = async () => {\n      return new Promise<void>((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata();\n            // send init params here\n            this.torusIframe.contentWindow.postMessage(\n              {\n                buttonPosition,\n                apiKey,\n                network,\n                dappMetadata,\n                extraParams,\n                whiteLabel,\n              },\n              torusIframeUrl.origin\n            );\n            await this._setupWeb3({\n              torusUrl,\n            });\n            if (showTorusButton) this.showTorusButton();\n            if (whiteLabel?.topupHide) this.isTopupHidden = whiteLabel.topupHide;\n            else this.hideTorusButton();\n            this.isInitialized = true;\n            (window as any).torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n\n    await documentReady();\n    await handleSetup();\n  }\n\n  async login(params: TorusLoginParams = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({ isFull: true });\n      }\n      // If user is already logged in, we assume they have given access to the website\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest(\n          { method: \"solana_requestAccounts\", params: [this.requestedLoginProvider, params.login_hint] },\n          getRpcPromiseCallback(resolve, reject)\n        );\n      });\n\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      }\n      // This would never happen, but just in case\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n\n  async loginWithPrivateKey(loginParams: { privateKey: string; userInfo: UserInfo }): Promise<void> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    const { privateKey, userInfo } = loginParams;\n    const { success } = await this.communicationProvider.request<{ privateKey: string; userInfo: UserInfo }, { success: boolean }>({\n      method: \"login_with_private_key\",\n      params: {\n        privateKey,\n        userInfo,\n      },\n    });\n    if (!success) throw new Error(\"Login Failed\");\n  }\n\n  async logout(): Promise<void> {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: [],\n    });\n    this.requestedLoginProvider = null;\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof Document;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton(): void {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async setProvider(params: NetworkInterface): Promise<void> {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: { ...params },\n    });\n  }\n\n  async showWallet(path: WALLET_PATH, params: Record<string, string> = {}): Promise<void> {\n    const instanceId = await this.communicationProvider.request<[], string>({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: [],\n    });\n    const finalPath = path ? `/${path}` : \"\";\n\n    const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n    // Using URL constructor to prevent js injection and allow parameter validation.!\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach((x) => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n    if (this.dappStorageKey) {\n      finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    // No need to track this window state. Hence, no _handleWindow call.\n    const walletWindow = new PopupHandler({ url: finalUrl, features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW) });\n    walletWindow.open();\n  }\n\n  async getUserInfo(): Promise<UserInfo> {\n    const userInfoResponse = await this.communicationProvider.request<[], UserInfo>({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: [],\n    });\n    return userInfoResponse as UserInfo;\n  }\n\n  async initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n    this.communicationProvider._handleWindow(windowId);\n    const topupResponse = await this.communicationProvider.request<\n      { provider: PAYMENT_PROVIDER_TYPE; params: PaymentParams; windowId: string },\n      boolean\n    >({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: { provider, params, windowId },\n    });\n    return topupResponse;\n  }\n\n  // Solana specific API\n  async getAccounts() {\n    const response = (await this.provider.request({\n      method: \"getAccounts\",\n      params: [],\n    })) as string[];\n    return response;\n  }\n\n  async sendTransaction(transaction: Transaction): Promise<string> {\n    const response = (await this.provider.request({\n      method: \"send_transaction\",\n      params: { message: transaction.serialize({ requireAllSignatures: false }).toString(\"hex\") },\n    })) as string;\n    return response;\n  }\n\n  // support sendOptions\n  async signAndSendTransaction(transaction: Transaction, options?: SendOptions): Promise<{ signature: string }> {\n    const response = (await this.provider.request({\n      method: \"send_transaction\",\n      params: { message: transaction.serialize({ requireAllSignatures: false }).toString(\"hex\"), options },\n    })) as string;\n    return { signature: response };\n  }\n\n  async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const response: string = (await this.provider.request({\n      method: \"sign_transaction\",\n      params: { message: transaction.serializeMessage().toString(\"hex\"), messageOnly: true },\n    })) as string;\n\n    // reconstruct signature pair\n    const parsed = JSON.parse(response);\n    const signature: SignaturePubkeyPair = { publicKey: new PublicKey(parsed.publicKey), signature: Buffer.from(parsed.signature, \"hex\") };\n    transaction.addSignature(signature.publicKey, signature.signature);\n    return transaction;\n  }\n\n  async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const encodedMessage: string[] = transactions.map((tx) => {\n      return tx.serializeMessage().toString(\"hex\");\n    });\n    const responses: string[] = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: { message: encodedMessage, messageOnly: true },\n    });\n\n    // reconstruct signature pairs\n    const signatures: SignaturePubkeyPair[] = responses.map((item) => {\n      const parsed = JSON.parse(item);\n      return { publicKey: new PublicKey(parsed.publicKey), signature: Buffer.from(parsed.signature, \"hex\") };\n    });\n\n    transactions.forEach((tx, idx) => {\n      tx.addSignature(signatures[idx].publicKey, signatures[idx].signature);\n      return tx;\n    });\n    return transactions;\n  }\n\n  async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = (await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data,\n      },\n    })) as Uint8Array;\n    return response;\n  }\n\n  async getGaslessPublicKey(): Promise<string> {\n    const response = (await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: [],\n    })) as string;\n    return response;\n  }\n\n  // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n\n  private handleDappStorageKey(useLocalStorage: boolean) {\n    let dappStorageKey = \"\";\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;\n      else {\n        const generatedKey = `torus-app-${getWindowId()}`;\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n\n  private async _setupWeb3(providerParams: { torusUrl: string }): Promise<void> {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow,\n    });\n\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow,\n    });\n\n    // compose the inPage provider\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n\n    inPageProvider.tryWindowHandle = (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n        _payload.windowId = windowId;\n      }\n      inPageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    communicationProvider.tryWindowHandle = (payload: JRPCRequest<unknown>, cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW), // todo: are these features generic for all\n        });\n        // for communication methods sending window id in jrpc req params\n        (_payload.params as Record<string, unknown>).windowId = windowId;\n      }\n      communicationProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>, cb);\n    };\n\n    // detect solana_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m) => {\n      const originalMethod = inPageProvider[m];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const { method, params = [] } = request;\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({ loginProvider: params[0] });\n          self\n            .login({ loginProvider: params[0] })\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .then((res) => cb(null, res))\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .catch((err) => cb(err));\n        }\n        return originalMethod.apply(this, [request, cb]);\n      };\n    };\n\n    // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n\n    await Promise.all([\n      inPageProvider._initializeState(),\n      communicationProvider._initializeState({\n        ...providerParams,\n        dappStorageKey: this.dappStorageKey,\n        torusAlertContainer: this.torusAlertContainer,\n        torusIframe: this.torusIframe,\n      }),\n    ]);\n    log.debug(\"Torus - injected provider\");\n  }\n}\n\nexport default Torus;\n"],"names":["fast_safe_stringify_1","require","EthereumRpcError","Error","constructor","code","message","data","Number","isInteger","undefined","serialize","serialized","stack","toString","default","stringifyReplacer","exports","_","value","isValidEthProviderCode","rpc","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","limitExceeded","parse","invalidRequest","methodNotFound","invalidParams","internal","provider","userRejectedRequest","unauthorized","unsupportedMethod","disconnected","chainDisconnected","standard","classes_1","utils_1","error_constants_1","getEthJsonRpcError","arg","parseOpts","getMessageFromCode","getEthProviderError","EthereumProviderError","Array","isArray","errorCodes","server","opts","custom","errors_1","FALLBACK_ERROR_CODE","FALLBACK_MESSAGE","FALLBACK_ERROR","fallbackMessage","arguments","length","codeString","hasKey","errorValues","isJsonRpcServerError","JSON_RPC_SERVER_ERROR_MESSAGE","isValidCode","assignOriginalError","error","Object","assign","obj","key","prototype","hasOwnProperty","call","fallbackError","shouldIncludeStack","_error","originalError","_a","_b","assert_1","__importDefault","externals_1","secp256k1_1","internal_1","constants_1","bytes_1","hash_1","helpers_1","types_1","Account","nonce","balance","stateRoot","codeHash","BN","KECCAK256_RLP","KECCAK256_NULL","this","_validate","fromAccountData","accountData","toBuffer","fromRlpSerializedAccount","values","rlp","decode","fromValuesArray","__read","lt","raw","bnToUnpaddedBuffer","encode","isContract","equals","isEmpty","isZero","hexAddress","assertIsString","e","test","eip1191ChainId","assertIsHexString","address","stripHexPrefix","toLowerCase","prefix","toType","TypeOutput","hash","keccakFromString","ret","i","parseInt","toUpperCase","isValidAddress","toChecksumAddress","from","assertIsBuffer","nonceBN","rlphash","slice","Buffer","toArray","salt","initCode","keccak256","concat","privateKey","privateKeyVerify","publicKey","sanitize","publicKeyVerify","pubKey","publicKeyConvert","keccak","pubToAddress","publicKeyCreate","publicToAddress","privateToPublic","addr","zeros","bufferToHex","zeroAddress","account_1","Address","buf","zero","fromString","str","fromPublicKey","isBuffer","fromPrivateKey","privateToAddress","generate","isBN","generateAddress","toArrayLike","generate2","generateAddress2","isPrecompileOrSystemAddress","addressBN","rangeMin","rangeMax","gte","lte","isSafeInteger","hex","intToHex","padToEven","bytes","allocUnsafe","fill","setLength","msg","right","copy","stripZeros","a","first","assertIsArray","v","Uint8Array","isHexString","intToBuffer","isNeg","toNumber","num","fromTwos","toTwos","isHexPrefixed","replace","ba","array","push","baToJSON","__values","entries","_c","next","done","_d","k","arrToBufArr","arr","map","bufArrToArr","buffer_1","KECCAK256_NULL_S","KECCAK256_RLP_ARRAY_S","KECCAK256_RLP_S","bn_js_1","__importStar","keccak_1","createHash","bits","keccak224","keccak384","keccak512","_sha256","update","digest","_ripemd160","padded","setLengthLeft","input","__exportStar","enumerable","get","getBinarySize","arrayContainsArray","toAscii","fromUtf8","fromAscii","getKeys","byteLength","superset","subset","some","indexOf","l","substring","substr","String","fromCharCode","stringValue","n","charCodeAt","params","allowEmpty","result","match","self","fields","_fields","toJSON","label","obj_1","forEach","field","getter","setter","allowZero","allowLess","unpadBuffer","name","defineProperty","configurable","set","alias","d","keys_1","keys","calculateSigRecovery","chainId","vBN","eqn","subn","chainIdBN","sub","muln","addn","isValidSigRecovery","recovery","rec","msgHash","ecdsaSign","signature","recid","r","s","senderPubKey","ecdsaRecover","vn","ss","sig","bufferToInt","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","gt","cmp","outputType","output","bn","max","MAX_SAFE_INTEGER","serializeError","URL","noop","ACK","BasePostMessageStream","Duplex","_ref","target","targetWindow","window","targetOrigin","super","objectMode","_defineProperty","_init","_haveSyn","_name","_target","_targetWindow","_targetOrigin","_onMessage","onMessage","bind","_synIntervalId","addEventListener","_handShake","_break","cork","_write","_onData","err","emit","uncork","_postMessage","originConstraint","postMessage","event","origin","source","_read","cb","_destroy","removeEventListener","safeApply","handler","context","args","Reflect","apply","setTimeout","SafeEventEmitter","EventEmitter","type","doError","events","_events","_len","_key","er","len","listeners","arrayClone","SerializableError","stringify","getRpcPromiseCallback","resolve","reject","unwrapResult","response","createStreamMiddleware","idMap","stream","read","write","res","_encoding","id","processNotification","end","processResponse","_err","middleware","req","createIdRemapMiddleware","_end","originalId","newId","randombytes","JRPCEngine","_middleware","middlewareStack","returnHandlers","isComplete","_runMiddleware","reverse","Promise","returnHandler","handlers","handle","_handleBatch","_handle","_promiseHandle","asMiddleware","async","middlewareError","_runAllMiddleware","_runReturnHandlers","handlerCallback","reqs","responses","all","callerReq","jsonrpc","method","_objectSpread$1","_processRequest","_checkForCompletion","Substream","parent","_parent","chunk","callback","IGNORE_SUBSTREAM","Symbol","ObjectMultiplex","_objectSpread","_substreams","createStream","substream","_cb","once","eos","readable","writable","anyStreamEnd","destroy","ignoreStream","console","warn","isNumeric","mathceil","Math","ceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","z","j","compare","x","y","b","xc","c","yc","intCheck","min","isOdd","toExponential","charAt","toFixedPoint","zs","clone","configObject","div","convertBase","parseNumeric","P","BigNumber","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","alphabet","caseChanged","isNum","_isBigNumber","search","round","DEBUG","format","rm","c0","ne","maxOrMin","m","normalise","pop","sd","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","p","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","minimum","random","pow2_53","random53bitInt","dp","rand","Uint32Array","splice","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","sign","callerIsToString","pow","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","isNegative","isPositive","minus","t","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","intDigits","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toPrecision","toStringTag","for","getCreateRandomId","COMMUNICATION_NOTIFICATIONS","COMMUNICATION_JRPC_METHODS","PROVIDER_JRPC_METHODS","PROVIDER_NOTIFICATIONS","TransactionStatus","messages","permanentlyDisconnected","unsupportedSync","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","connected","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","configuration","supportedVerifierList","api","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","prodTorusUrl","localStorageKey","location","hostname","log","loglevel","getWindowId","getTorusUrl","torusUrl","logLevel","buildEnv","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","w","h","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","left","top","BaseProvider","connectionStream","jsonRpcStreamName","duplex","isTorus","setMaxListeners","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","request","sendAsync","mux","pump","jsonRpcConnection","rpcEngine","options","ethErrors","isTorusInternal","_rpcEngine","jsonRpcConnectionEvents","send","payload","streamName","remoteLabel","emitter","warningMsg","listenerCount","logStreamDisconnectWarning","documentReady","readyState","eventName","handlerArgs","handlerWrapper","handleEvent","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PopupHandler","url","features","windowTimer","iClosedWindow","_setupTimer","setInterval","closed","clearInterval","open","_this$window","href","focus","close","redirect","locationReplaceOnRedirect","TorusCommunicationProvider","_state","_objectSpread$2","_defaultState","dappStorageKey","languageTranslations","getUserLanguage","userLanguage","navigator","language","userLanguages","embedTranslations","windowRefs","on","isConnected","isFullScreen","rid","_displayIframe","isFull","windowId","_createPopupBlockAlert","_handleCloseWindow","currentLoginProvider","isLoggedIn","isIFrameFullScreen","torusAlertContainer","torusIframe","info","initialized","_handleWindow","finalUrl","handledWindow","style","display","bottom","torusWidgetVisibility","buttonPosition","hideTorusButton","showTorusButton","_payload","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","attachOnLoad","bindOnLoad","remove","children","hasEmittedConnection","TorusInPageProvider","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","accounts","isUnlocked","isInternal","isEthAccounts","finalAccounts","account","dequal","imgExists","img","onload","onerror","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","querySelectorAll","find","_icon","Boolean","version","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","isLocalStorageAvailable","storage","setItem","removeItem","storageAvailable","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","enableLogging","network","useLocalStorage","apiKey","extraParams","whiteLabel","setAPIKey","enableAll","setDefaultLevel","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","body","dappMetadata","getSiteMetadata","contentWindow","_setupWeb3","topupHide","isTopupHidden","torus","handleSetup","loginProvider","login_hint","loginParams","userInfo","success","logout","clearInit","isElement","element","Element","Document","contains","path","instanceId","finalPath","searchParams","transaction","requireAllSignatures","serializeMessage","messageOnly","parsed","JSON","PublicKey","addSignature","transactions","encodedMessage","tx","signatures","item","idx","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","originalMethod","login","then","catch","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider"],"sourceRoot":""}